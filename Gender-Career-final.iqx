**************************************************************************************************************
**************************************************************************************************************
	Implicit Attitude Test (IAT)
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

<values>
/showsummaryfeedback = true
</values>


**************************************************************************************************************
**************************************************************************************************************
Stimuli: EDIT HERE
**************************************************************************************************************
**************************************************************************************************************

<item attributeAlabel>
/1 = "男性职业"
</item>

<item attributeA>
/1 = "建筑设计师"
/2 = "律师"
/3 = "政治家"
/4 = "消防员"
/5 = "保安"
/6 = "足球教练"
/7 = "电脑工程师"
</item>

<item attributeBlabel>
/1 = "女性职业"
</item>

<item attributeB>
/1 = "售票员"
/2 = "护士"
/3 = "幼儿园老师"
/4 = "秘书"
/5 = "舞蹈演员"
/6 = "美容师"
/7 = "保姆"
</item>

<item targetAlabel>
/1 = "男性姓名"
</item>

<item targetA>
/1 = "郑家树"
/2 = "刘国强"
/3 = "周志强"
/4 = "谢刚"
/5 = "丁勇"
</item>

<item targetBlabel>
/1 = "女性姓名"
</item>

<item targetB>
/1 = "罗小燕"
/2 = "赵蓓蕾"
/3 = "刘丽娜"
/4 = "李莎"
/5 = "蔡婷"
</item>






**************************************************************************************************************
**************************************************************************************************************
    Defaults
**************************************************************************************************************
**************************************************************************************************************

<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
/ canvasaspectratio = (4, 3)
</defaults>

**************************************************************************************************************
**************************************************************************************************************
    Scoring
**************************************************************************************************************
**************************************************************************************************************

*********************
automatically updated
*********************
/completed:					0 = script was not completed; 1 = script was completed (all conditions run)
/ sum1a:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the first compatible block 1A
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response)
/ sum2a:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the first incompatible block 2A
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response) 
/ sum1b:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the second compatible block 1B
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response)
/ sum2b:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the second incompatible block 2B
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response) 
/ n1a:						counts the number of trials in first compatible block 1A (except first one)
/ n2a:						counts the number of trials in first incompatible block 2A (except first one)
/ n1b:						counts the number of trials in second compatible block 1B
/ n2b:						counts the number of trials in second incompatible block 2B
/ ss1a:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the first compatible block
/ ss2a						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the first incompatible block
/ ss1b:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the second compatible block 
/ ss2b:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the second incompatible block 
/ magnitude:				stores the magnitude of the implicit preference: "little to no", "a slight", "a moderate", "a strong"
/ n_correct:				counts all initial correct responses of all trials that count towards D score

<values>
/ completed = 0
/ sum1a = 0
/ sum2a = 0
/ sum1b = 0
/ sum2b = 0
/ n1a = 0
/ n2a = 0
/ n1b = 0
/ n2b = 0
/ ss1a = 0
/ ss2a = 0
/ ss1b = 0
/ ss2b = 0
/ magnitude = "unknown"
/ n_correct = 0
</values>

* 1 is compatible, 2 is incompatible
* a is first block, b is second block

/ m1a:					mean latencies of correct responses in first compatible block
/ m2a:					mean latencies of correct responses in first incompatible block
/ m1b:					mean latencies of correct responses in second compatible block
/ m2b:					mean latencies of correct responses in second incompatible block
/ sd1a:					standard deviation of latencies of correct responses in first compatible block
/ sd2a					standard deviation of latencies of correct responses in first incompatible block
/ sd1b:					standard deviation of latencies of correct responses in second compatible block
/ sd2b:					standard deviation of latencies of correct responses in second incompatible block
/ sda					standarddeviation of latencies in first block
/ sdb 					standarddeviation of latencies in second block
/ da:					D-score for first blocks		
/ db:					D-score for second blocks
/ d:					overall D-score
/ preferred:			stores the preferred target category
/ notpreferred :		stores the non preferred target category
/ percentcorrect:       the overall percent correct score of initial responses of test trials of D-score qualifying latencies


<expressions>
/ m1a = values.sum1a / values.n1a
/ m2a = values.sum2a / values.n2a
/ m1b = values.sum1b / values.n1b
/ m2b = values.sum2b / values.n2b
/ sd1a = sqrt((values.ss1a - (values.n1a * (expressions.m1a * expressions.m1a))) / (values.n1a - 1))
/ sd2a = sqrt((values.ss2a - (values.n2a * (expressions.m2a * expressions.m2a))) / (values.n2a - 1))
/ sd1b = sqrt((values.ss1b - (values.n1b * (expressions.m1b * expressions.m1b))) / (values.n1b - 1))
/ sd2b = sqrt((values.ss2b - (values.n2b * (expressions.m2b * expressions.m2b))) / (values.n2b - 1))
/ sda = sqrt((((values.n1a - 1) * (expressions.sd1a * expressions.sd1a) + (values.n2a - 1) * (expressions.sd2a * expressions.sd2a)) + ((values.n1a + values.n2a) * ((expressions.m1a - expressions.m2a) * (expressions.m1a - expressions.m2a)) / 4) ) / (values.n1a + values.n2a - 1) )
/ sdb = sqrt((((values.n1b - 1) * (expressions.sd1b * expressions.sd1b) + (values.n2b - 1) * (expressions.sd2b * expressions.sd2b)) + ((values.n1b + values.n2b) * ((expressions.m1b - expressions.m2b) * (expressions.m1b - expressions.m2b)) / 4) ) / (values.n1b + values.n2b - 1) )
/ da = (m2a - m1a) / expressions.sda
/ db = (m2b - m1b) / expressions.sdb
/ d = (expressions.da + expressions.db) / 2
/ preferred = "unknown"
/ notpreferred = "unknown"
/ percentcorrect = (values.n_correct/ (values.n1a + values.n1b + values.n2a + values.n2b)) * 100
</expressions>

**************************************************************************************************************
**************************************************************************************************************
    Data
**************************************************************************************************************
**************************************************************************************************************

****************
raw data
****************
date/time/group/subject:			built in variables that track date and time when script was run with the assigned
									subject- and group number

									Note: group1/group2 counterbalance the order in which the pairings are run

blockcode:							the name of the current trial
blocknum:							the number of the current trial
trialcode:							the name of the current trial
trialnum:							the number of the current trial
response:							the final trial response (scancodes of the keys pressed)
										Note: script saves the final and -by design- correct response
correct:							the accuracy of the initial response
										0 = initial response was incorrect and needed to be corrected
										1 = initial response is correct
latency:							the latency of the final (correct) response
stimulusnumber:						the number of the current stimulus
stimulusitem:						the currently presented item
expressions.da:						d-score of the first blocks
expressions.db:						d-score of the second blocks
expressions.d:						overall d-score
/ percentcorrect:       			the overall percent correct score of initial responses of test trials of D-score qualifying latencies


<data>
/ file = "GenderCareerIAT_rawdata.iqdat"
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, response, correct, latency, 
stimulusnumber, stimulusitem, expressions.da, expressions.db, expressions.d, expressions.percentcorrect ]
/ separatefiles = true
</data>

****************
summary data
****************
script.startdate:					date script was run
script.starttime:					time script was started
script.subjectid:					subject id number
script.groupid:						group id number
script.elapsedtime:					time it took to run script (in ms)
/completed:							0 = script was not completed; 1 = script was completed (all conditions run)

expressions.da:						d-score of the first blocks
expressions.db:						d-score of the second blocks
expressions.d:						overall d-score
/ percentcorrect:       			the overall percent correct score of initial responses of test trials of D-score qualifying latencies


<summarydata >
/ file = "GenderCareerIAT_summary.iqdat"
/ columns = [script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed,
expressions.da, expressions.db, expressions.d, expressions.percentcorrect]
</summarydata>



***********************************************************************
Performance summary
***********************************************************************

<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "a slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "a moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "a strong"]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.preferred = item.targetALabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.preferred = item.targetBLabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.notpreferred= item.targetALabel.1]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.notpreferred= item.targetBLabel.1]
</trial>

<text summary>
/ items = ("       Your IAT score (D) is <% expressions.d%>, which suggests <%values.magnitude%> association of <%expressions.preferred%> with <%item.attributeAlabel.1%> and <%expressions.notpreferred%> with <%item.attributeBlabel.1%> compared to <%expressions.preferred%> with <%item.attributeBlabel.1%> and <%expressions.notpreferred%> with <%item.attributeAlabel.1%>.
~n~n~n       请按空格键退出。") 
/ size = (60%, 60%)
/ hjustify = left
 </text>

***********************************************************************
Task instruction stimuli
***********************************************************************

<trial instructions>
/ stimulustimes = [1=instructions, spacebar]
/ correctresponse = (" ")
/ correctmessage = (mask,200)
/ errormessage = false
/ recorddata = false
</trial>

<text mask>
/ position = (50%, 75%)
/ items = ("  ")
/ color = (0, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>


<text instructions>
/ items = instructions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<item instructions>
/ 1 = "       接下来，屏幕中央将会呈现一些词，词的类别将会呈现在屏幕顶部。请把中指或食指放在键盘的 F 和 J 键上。当呈现的词属于顶部左侧的类别时，按F键；属于顶部右侧的类别时，按J键。每个词只属于一个类别。如果您选择错误，屏幕下方会出现一个叉号“X”，请您按下另一个键来改正错误。

       这是一个计时的分类任务，请尽可能快而准地做出反应。反应过慢或错误太多将导致实验分数难以解释。本次任务大概需要5分钟。"
/ 2 = "       请观察上方，词及其类别都已经改变，但实验规则不变。

       当呈现的词属于顶部左侧的类别时，按 F 键；属于顶部右侧的类别时，按 J 键。每个词只属于一个类别。如果您选择错误，屏幕下方会出现一个叉号“X”，请您按下另一个键来改正错误。请尽可能快而准地做出反应。"
/ 3 = "          
       请观察上方，之前出现的4个类别将一起呈现。请记住，每个词之属于一种类别。例如，如果类别 <%item.targetalabel.item(1)%> 和 <%item.attributealabel.item(1)%> 出现在上方的同一侧 - 词语 <%item.targetalabel.item(1)%> 应该属于 <%item.targetalabel.item(1)%> 一类, 而不是 <%item.attributealabel.item(1)%> 一类。

       类别字体的绿色和白色可以帮助您确定合适的类别。请通过按 F 和 J 键将词分组。"

/ 4 = "          
       请再次将呈现的词归为合适的类别。尽可能快而准地反应。

       类别字体的绿色和白色可以帮助您确定合适的类别。请通过按 F 和 J 键将词分组。"
/ 5 = "       请注意上方，现在只有2个类别，并且它们的位置与之前不同。之前出现在左边的类别名称现在会出现在右边，而之前出现在右边的类别名称现在会出现在左边。现在进行练习。

       当呈现的词属于顶部左侧的类别时，按 F 键；属于顶部右侧的类别时，按 J 键。出错时按下另一个键来改正错误。"
/ 6 = "
       请观察上方，之前出现的4个类别将一起呈现。请记住，每个词之属于一种类别。

       类别字体的绿色和白色可以帮助您确定合适的类别。请通过按 F 和 J 键将词分组，出错时按下另一个键来改正错误。"
/ 7 = "    
       请再次将呈现的词归为合适的类别。尽可能快而准地反应。

       类别字体的绿色和白色可以帮助您确定合适的类别。请通过按 F 和 J 键将词分组，出错时按下另一个键来改正错误。"
</item>

<text spacebar>
/ items = ("请按空格键开始。")
/ position = (50%, 95%)
/ valign = bottom
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<text targetB>
/ items = targetB
/ fontstyle = ("Arial", 5%)
</text>

<text targetA>
/ items = targetA
/ fontstyle = ("Arial", 5%)
</text>

<text right>
/ position = (50%, 75%)
/ items = ("√")
/ color = (0, 255, 0)
/ fontstyle = ("Arial", 10%, true)
</text>


<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text attributeAleft>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBright>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeAleftmixed>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBrightmixed>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBleft>
/ items = targetBlabel
/ valign = top
/ halign = left	
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBright>
/ items = targetBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleft>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAright>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text orleft>
/ items = ("或")
/ valign = top
/ halign = left
/ position = (5%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text orright>
/ items = ("或")
/ valign = top
/ halign = right
/ position = (95%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

***********************************************************************
Trials
***********************************************************************

<trial attributeA>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial attributeB>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>


<trial targetBleft>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetBright>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetAleft>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

<trial targetAright>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

***********************************************************************
Blocks
***********************************************************************

<block attributepractice>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions;2-21 = random(attributeA, attributeB)]
/ correctmessage = true(right,200)
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepractice>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-21 = random(targetAleft, targetBright)]
/ correctmessage = true(right,200)
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepractice>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-21 = random(targetAright, targetBleft)]
/ correctmessage = true(right,200)
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepracticeswitch>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-41 = random(targetAleft, targetBright)]
/ correctmessage = true(right,200)
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepracticeswitch>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-41 = random(targetAright, targetBleft)]
/ correctmessage = true(right,200)
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block compatibletest1>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21= random(targetAleft, targetBright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.sum1a =  values.sum1a + block.compatibletest1.latency]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.n1a +=  1]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.ss1a =  values.ss1a + (block.compatibletest1.latency * block.compatibletest1.latency)]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.n_correct += block.compatibletest1.correct]
</block>

<block compatibletest2>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetAleft, targetBright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.sum1b =  values.sum1b + block.compatibletest2.latency]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.n1b += 1]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.ss1b =  values.ss1b + (block.compatibletest2.latency * block.compatibletest2.latency)]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.n_correct += block.compatibletest2.correct]
</block>

<block incompatibletest1>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21 = random(targetBleft, targetAright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1) values.sum2a =  values.sum2a + block.incompatibletest1.latency]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.n2a +=  1]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.ss2a =  values.ss2a + (block.incompatibletest1.latency * block.incompatibletest1.latency)]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.n_correct += block.incompatibletest1.correct]
</block>

<block incompatibletest2>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetBleft, targetAright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.sum2b =  values.sum2b + block.incompatibletest2.latency]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.n2b +=  1]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.ss2b =  values.ss2b + (block.incompatibletest2.latency * block.incompatibletest2.latency)]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.n_correct += block.incompatibletest2.correct]
</block>


<block compatibletestinstructions>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block incompatibletestinstructions>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block summary>
/skip = [values.showsummaryfeedback == false]
/ trials = [1=summary]
/ recorddata = false
</block>

***********************************************************************
Experiment
***********************************************************************
Groupassignment is done by groupnumber

<expt>
/subjects = (1 of 2)
/groupassignment = groupnumber
/ blocks = [1=targetcompatiblepractice; 2=attributepractice; 3=compatibletest1; 4=compatibletestinstructions;
				5=compatibletest2; 6=targetincompatiblepractice; 7=incompatibletest1; 8=incompatibletestinstructions;
				9=incompatibletest2; 10=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/subjects = (2 of 2)
/groupassignment = groupnumber
/ blocks = [1=targetincompatiblepractice; 2=attributepractice; 3=incompatibletest1; 4=incompatibletestinstructions;
				5=incompatibletest2; 6=targetcompatiblepractice; 7=compatibletest1; 8=compatibletestinstructions; 
				9=compatibletest2; 10=summary]
/onexptend = [values.completed = 1]
</expt>

***********************************************************************
Test Monkey
***********************************************************************
<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>